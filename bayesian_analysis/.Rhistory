select(
observer = "subj",
condition = "version",
block = "completed",
t = "trial",
n = "fixNum",
side) %>%
mutate(observer = paste("d", observer, sep = ""))-> deadline_dat
deadline_dat
# Read in Acc and RT data
deadline_dat <- as_tibble(readRDS("../data/processedRTandAccData.Rda"))
reward_dat <- as_tibble(readRDS("../../Reward-Experiment/data/processedRTandAccData.Rda"))
subjectsToRemove = c(22,19,12)#22 and 19 accuracy on homogenous trials below 50%, 12 RT on homogenous trials over 8s
reward_dat = (reward_dat[!(reward_dat$subj%in% subjectsToRemove),])
reward_dat$subj = as.factor(reward_dat$subj)
rm(subjectsToRemove)
# Tidy up a little
deadline_dat %>%
select(
observer = "subj",
condition = "version",
targ_side = "targSide",
block = "completed",
t = "trial",
rt = "RT",
acc) %>%
mutate(
block = as.factor(block),
observer = paste("d", observer, sep = "")) -> deadline_dat
reward_dat %>%
select(
observer = "subj",
condition = "incentive",
targ_side = "targSide",
block,
t = "trial",
rt = "RT",
acc) %>%
mutate(
observer = paste("r", observer, sep = "")) -> reward_dat
bind_rows(deadline_dat, reward_dat) %>%
mutate(
condition = as_factor(condition),
condition = fct_recode(condition,
reward = "r", flat = "f", long = "U", brief = "T"),
condition = fct_relevel(condition, "long", "flat", "brief", "reward"),
block = as_factor(block),
block = fct_recode(block, "block 1" = "1", "block 2" = "2"),
targ_side = fct_recode(targ_side,
heterogeneous = "hetrogeneous",
heterogeneous = "heterogenous",
homogeneous = "homogenous"),
t = as.numeric(t),
t = if_else(block == "block 2", t + 96, t)) %>%
rename(cd = "condition", bk = "block") -> dat_rt_acc
rm(deadline_dat, reward_dat)
write_csv(dat_rt_acc, "dat_acc_rt.csv")
### Read in fixation data
# read Deadline data
deadline_dat <- as_tibble(readRDS("../data/processedFixData.Rda"))
# get Reward data
reward_dat <- as_tibble(readRDS("../../Reward-Experiment/data/processedFixData.Rda"))
reward_dat %>% mutate(fixX  = fixXflipped + 512) -> reward_dat
subjectsToRemove = c(22,19,12)#22 and 19 accuracy on homogenous trials below 50%, 12 RT on homogenous trials over 8s
reward_dat = (reward_dat[!(reward_dat$subj%in% subjectsToRemove),])
reward_dat$subj = as.factor(reward_dat$subj)
rm(subjectsToRemove)
assign_fixation_side <- function(df) {
# classify every fixation as homo (right), central, or hetero (left)
centralWidth = 64 #change to 1 visual degree
df$side = 'central'
df$side[which(df$fixX <(512-centralWidth/2))] = "hetero"
df$side[which(df$fixX >(512+centralWidth/2))] = "homo"
df$side = as.factor(df$side)
return(df)
}
deadline_dat <- assign_fixation_side(deadline_dat)
reward_dat <- assign_fixation_side(reward_dat)
deadline_dat %>%
select(
observer = "subj",
condition = "version",
block = "completed",
t = "trial",
n = "fixNum",
side) %>%
mutate(observer = paste("d", observer, sep = ""))-> deadline_dat
source('~/GitHub/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
source('~/GitHub/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
deadline_dat
# get Reward data
reward_dat <- as_tibble(readRDS("../../Reward-Experiment/data/processedFixData.Rda"))
reward_dat %>% mutate(fixX  = fixXflipped + 512) -> reward_dat
reward_dat
source('~/GitHub/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
reward_dat
reward_dat %>%
select(
observer = "subj",
condition = "incentive",
block,
t = "trialNum",
n = "fixNum",
side,
duaration = fixOff - fixOn) %>%
mutate(
observer = paste("r", observer, sep = "")) -> reward_dat
names(reward_dat)
reward_dat %>%
mutate(duration = fixOff - fixOn) %>%
select(
observer = "subj",
condition = "incentive",
block,
t = "trialNum",
n = "fixNum",
side,
duration) %>%
mutate(
observer = paste("r", observer, sep = "")) -> reward_dat
source('~/GitHub/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
dat_fix
source('~/GitHub/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
# set the seed, so running this file will give exactly the same numbers as in our paper (hopefully)!
set.seed(2020)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.height = 4, fig.align = 'center')
library(brms)
library(tidyverse)
library(tidybayes)
library(patchwork)
library(lmerTest)
rstan::rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# import data
# source("import_and_tidy_data.R")
dat_rt_acc <- read_csv("dat_acc_rt.csv")
dat_fix <- read_csv("dat_fix.csv") %>% filter(n > 1)
# set the seed, so running this file will give exactly the same numbers as in our paper (hopefully)!
set.seed(2020)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.height = 4, fig.align = 'center')
library(brms)
library(tidyverse)
library(tidybayes)
library(patchwork)
library(lmerTest)
rstan::rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# import data
# source("import_and_tidy_data.R")
dat_rt <- read_csv("dat_acc_rt.csv")
dat_fix <- read_csv("dat_fix.csv") %>% filter(n > 1)
dat_fix %>% left_join(dat_rt_acc,
by = c("observer", "cd", "bk", "t")) %>%
filter(
cd %in% c("long", "brief"),
acc == 1,
targ_side == "absent") %>%
group_by(observer, cd, n) %>%
summarise(prop_hetero = mean(hetero_fix), .groups = 'drop') -> d_strat
source('~/.active-rstudio-document', echo=TRUE)
dat_fix
source('~/GitHub/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
dat_fix
deadline_dat
library(tidyverse)
# Read in Acc and RT data
deadline_dat <- as_tibble(readRDS("../data/processedRTandAccData.Rda"))
reward_dat <- as_tibble(readRDS("../../Reward-Experiment/data/processedRTandAccData.Rda"))
subjectsToRemove = c(22,19,12)#22 and 19 accuracy on homogenous trials below 50%, 12 RT on homogenous trials over 8s
reward_dat = (reward_dat[!(reward_dat$subj%in% subjectsToRemove),])
reward_dat$subj = as.factor(reward_dat$subj)
rm(subjectsToRemove)
# Tidy up a little
deadline_dat %>%
select(
observer = "subj",
condition = "version",
targ_side = "targSide",
block = "completed",
t = "trial",
rt = "RT",
acc) %>%
mutate(
block = as.factor(block),
observer = paste("d", observer, sep = "")) -> deadline_dat
reward_dat %>%
select(
observer = "subj",
condition = "incentive",
targ_side = "targSide",
block,
t = "trial",
rt = "RT",
acc) %>%
mutate(
observer = paste("r", observer, sep = "")) -> reward_dat
bind_rows(deadline_dat, reward_dat) %>%
mutate(
condition = as_factor(condition),
condition = fct_recode(condition,
reward = "r", flat = "f", long = "U", brief = "T"),
condition = fct_relevel(condition, "long", "flat", "brief", "reward"),
block = as_factor(block),
block = fct_recode(block, "block 1" = "1", "block 2" = "2"),
targ_side = fct_recode(targ_side,
heterogeneous = "hetrogeneous",
heterogeneous = "heterogenous",
homogeneous = "homogenous"),
t = as.numeric(t),
t = if_else(block == "block 2", t + 96, t)) %>%
rename(cd = "condition", bk = "block") -> dat_rt_acc
rm(deadline_dat, reward_dat)
write_csv(dat_rt_acc, "dat_acc_rt.csv")
### Read in fixation data
# read Deadline data
deadline_dat <- as_tibble(readRDS("../data/processedFixData.Rda"))
# get Reward data
reward_dat <- as_tibble(readRDS("../../Reward-Experiment/data/processedFixData.Rda"))
reward_dat %>% mutate(fixX  = fixXflipped + 512) -> reward_dat
subjectsToRemove = c(22,19,12)#22 and 19 accuracy on homogenous trials below 50%, 12 RT on homogenous trials over 8s
reward_dat = (reward_dat[!(reward_dat$subj%in% subjectsToRemove),])
reward_dat$subj = as.factor(reward_dat$subj)
rm(subjectsToRemove)
assign_fixation_side <- function(df) {
# classify every fixation as homo (right), central, or hetero (left)
centralWidth = 64 #change to 1 visual degree
df$side = 'central'
df$side[which(df$fixX <(512-centralWidth/2))] = "hetero"
df$side[which(df$fixX >(512+centralWidth/2))] = "homo"
df$side = as.factor(df$side)
return(df)
}
deadline_dat <- assign_fixation_side(deadline_dat)
reward_dat <- assign_fixation_side(reward_dat)
deadline_dat %>%
select(
observer = "subj",
condition = "version",
block = "completed",
t = "trial",
n = "fixNum",
side,
duaration = fixDur) %>%
mutate(observer = paste("d", observer, sep = ""))-> deadline_dat
reward_dat %>%
mutate(duration = fixOff - fixOn) %>%
select(
observer = "subj",
condition = "incentive",
block,
t = "trialNum",
n = "fixNum",
side,
duration) %>%
mutate(
observer = paste("r", observer, sep = "")) -> reward_dat
deadline_dat
reward_dat
bind_rows(deadline_dat, reward_dat) %>%
filter(n < 7) %>%
mutate(
condition = as_factor(condition),
condition = fct_recode(condition,
long = "U", flat = "f", brief = "T", reward = "r"),
condition = fct_relevel(condition, "long", "flat", "brief", "reward"),
hetero_fix = as.numeric(side == "hetero"),
block = as_factor(block),
block = fct_recode(block, "block 1" = " 1", "block 2" = " 2"),
t = if_else(block == "block 2", t + 96, t),
ts = (t-1)/96) %>%
select(-side) %>%
rename(cd = "condition", bk = "block") -> dat_fix
dat_fix
bind_rows(deadline_dat, reward_dat)
source('~/GitHub/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
fix_dat
dat_fix
source('~/.active-rstudio-document', echo=TRUE)
dat_fix
d_sacc1 <- filter(dat_fix, n == 1)
d_fix2 <- filter(dat_fix, n== 2)
d_fix2
d_sacc1 <- filter(dat_fix, n == 1) %>%
select(-n, hetero_fix, ts)
d_fix2 <- filter(dat_fix, n== 2) %>%
select(-n, -duration)
d_init_sacc <- fUll_join(d_sacc1, d_fix2)
source('~/GitHub/Deadline-Experiment/bayesian_analysis/first_sacc.R', echo=TRUE)
?full_join
library(tidyverse)
d_init_sacc <- fUll_join(d_sacc1, d_fix2)
source('~/GitHub/Deadline-Experiment/bayesian_analysis/first_sacc.R', echo=TRUE)
?fUll_join
?full_join
d_init_sacc <- full_join(d_sacc1, d_fix2)
source('~/GitHub/Deadline-Experiment/bayesian_analysis/first_sacc.R', echo=TRUE)
d_init_sacc
d_fix1
d_fix2
d_sacc1
d_sacc1 <- filter(dat_fix, n == 1) %>%
select(-n, -hetero_fix, -ts)
d_fix2 <- filter(dat_fix, n== 2) %>%
select(-n, -duration, -ts)
d_init_sacc <- full_join(d_sacc1, d_fix2)
d_init_sacc
summary(d_init_sacc)
d_init_sacc <- full_join(d_sacc1, d_fix2) %>%
filter(is.finite(hetero_fix))
summary(d_init_sacc)
ggplot(d_init_sacc, x = duration) + geom_density()
ggplot(d_init_sacc, aes(x = duration)) + geom_density()
ggplot(d_init_sacc, aes(x = duration)) + geom_histogram()
ggplot(d_init_sacc, aes(x = duration)) + geom_histogram(bins = 50)
d_init_sacc %>% ggplot(aes(x= duration, fill = hetero_fix)) + geom_histogram(bins = 50)
d_init_sacc %>% ggplot(aes(x = duration, fill = hetero_fix)) + geom_histogram(bins = 50)
d_init_sacc %>% ggplot(aes(x = duration, colourl = hetero_fix)) + geom_histogram(bins = 50)
d_init_sacc %>% ggplot(aes(x = duration, colour = hetero_fix)) + geom_histogram(bins = 50)
d_init_sacc <- full_join(d_sacc1, d_fix2) %>%
filter(is.finite(hetero_fix))
d_init_sacc %>% ggplot(aes(x = duration, colour = hetero_fix)) + geom_histogram(bins = 50)
d_init_sacc %>% ggplot(aes(x = duration, colour = hetero_fix)) + geom_histogram(bins = 50)
d_init_sacc <- full_join(d_sacc1, d_fix2) %>%
filter(is.finite(hetero_fix)) %>%
mutate(saccade_to = if_else(hetero_fix == 1, "heterogeneous", "homogeneous"))
d_init_sacc %>% ggplot(aes(x = duration, colour = saccade_to)) + geom_histogram(bins = 50)
d_init_sacc %>% ggplot(aes(x = duration, fill = saccade_to)) + geom_histogram(bins = 50)
filter(d_init_sacc, duration < 200)
summary(filter(d_init_sacc, duration < 200))
d_init_sacc %>% ggplot(aes(x = duration, fill = saccade_to)) + geom_histogram(bins = 50) + facet_wrap(~cd)
d_init_sacc <- full_join(d_sacc1, d_fix2) %>%
filter(is.finite(hetero_fix)) %>%
mutate(
saccade_to = if_else(hetero_fix == 1, "heterogeneous", "homogeneous"),
observer = as_factor(observer))
summary(filter(d_init_sacc, duration < 200))
source('~/github/Deadline-Experiment/bayesian_analysis/first_sacc.R', echo=TRUE)
rstan::rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# import data
# source("import_and_tidy_data.R")
dat_rt_acc <- read_csv("dat_acc_rt.csv")
dat_fix <- read_csv("dat_fix.csv")
d_sacc1 <- filter(dat_fix, n == 1) %>%
select(-n, -hetero_fix, -ts)
d_sacc1
d_fix2 <- filter(dat_fix, n== 2) %>%
select(-n, -duration, -ts)
d_init_sacc <- full_join(d_sacc1, d_fix2) %>%
filter(is.finite(hetero_fix)) %>%
mutate(
saccade_to = if_else(hetero_fix == 1, "heterogeneous", "homogeneous"),
observer = as_factor(observer))
d_init_sacc
d_init_sacc %>% ggplot(aes(x = duration, fill = saccade_to)) + geom_histogram(bins = 50) + facet_wrap(~cd)
# let's just look ate median fixation duration
d_init_sacc %>% group_by(observer, saccade_to, cd) %>%
summarise(median_duration = median(duration)) %>%
ggplot(aes(x = duration, fill = saccade_to)) + geom_boxplot() + facet_wrap(~cd)
# let's just look ate median fixation duration
d_init_sacc %>% group_by(observer, saccade_to, cd) %>%
summarise(median_duration = median(duration)) %>%
ggplot(aes(y = median_duration, fill = saccade_to)) + geom_boxplot() + facet_wrap(~cd)
d_init_sacc %>% group_by(observer, saccade_to, cd) %>%
summarise(median_duration = median(duration))
d_init_sacc %>% group_by(observer, saccade_to, cd) %>%
summarise(median_duration = median(duration)) %>%
group_by(cd, saccade_to) %>%
summarise(mean_med_dur = mean(median_duration))
d_init_sacc %>% filter(observer != "d2") %>%
group_by(observer, saccade_to, cd) %>%
summarise(median_duration = median(duration)) %>%
group_by(cd, saccade_to) %>%
summarise(mean_med_dur = mean(median_duration))
# set the seed, so running this file will give exactly the same numbers as in our paper (hopefully)!
set.seed(2020)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.height = 4, fig.align = 'center')
library(brms)
library(tidyverse)
library(tidybayes)
library(patchwork)
rstan::rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# import data
# source("import_and_tidy_data.R")
dat_rt_acc <- read_csv("dat_acc_rt.csv")
dat_fix <- read_csv("dat_fix.csv")
d_sacc1 <- filter(dat_fix, n == 1) %>%
select(-n, -hetero_fix, -ts)
d_fix2 <- filter(dat_fix, n== 2) %>%
select(-n, -duration, -ts)
d_init_sacc <- full_join(d_sacc1, d_fix2) %>%
filter(is.finite(hetero_fix)) %>%
mutate(
saccade_to = if_else(hetero_fix == 1, "heterogeneous", "homogeneous"),
observer = as_factor(observer))
d_init_sacc %>% ggplot(aes(x= duration, fill = saccade_to)) + geom_density() =facet_wrap(~cd)
d_init_sacc %>% ggplot(aes(x= duration, fill = saccade_to)) + geom_density() =facet_wrap(~cd)
d_init_sacc <- full_join(d_sacc1, d_fix2) %>%
filter(is.finite(hetero_fix)) %>%
mutate(
saccade_to = if_else(hetero_fix == 1, "heterogeneous", "homogeneous"),
observer = as_factor(observer))
d_init_sacc %>% ggplot(aes(x= duration, fill = saccade_to)) + geom_density() =facet_wrap(~cd)
d_init_sacc %>% ggplot(aes(x= duration, fill = saccade_to)) + geom_density()  + facet_wrap(~cd)
d_init_sacc %>% ggplot(aes(x= duration, fill = saccade_to)) + geom_density(alpha = 0.5)  + facet_wrap(~cd)
d_init_sacc %>% ggplot(aes(x= duration, fill = saccade_to)) + geom_density(alpha = 0.5)  + facet_grid(observer~cd)
d_init_sacc %>% filter(observer == "d2")
d_init_sacc %>% group_by(observer, saccade_to, cd) %>%
summarise(median_duration = median(duration))
d_init_sacc %>% group_by(observer, saccade_to, cd) %>%
summarise(median_duration = median(duration)) %>% filter(median_duration>1000)
d_init_sacc %>% group_by(observer) %>%
summarise(median_duration = median(duration)) %>% filter(median_duration>1000)
d_init_sacc %>% group_by(observer) %>%
summarise(median_duration = median(duration)) %>% filter(median_duration>900)
d_init_sacc %>% group_by(observer) %>%
summarise(median_duration = median(duration)) %>% filter(median_duration>500)
d_init_sacc %>% group_by(observer) %>%
summarise(median_duration = median(duration)) %>% filter(median_duration>800)
source('~/github/Deadline-Experiment/bayesian_analysis/first_sacc.R', echo=TRUE)
d_init_sacc %>% filter(observer != "d2") %>%
group_by(observer, saccade_to, cd) %>%
summarise(median_duration = median(duration)) %>%
group_by(cd, saccade_to) %>%
summarise(mean_med_dur = mean(median_duration))
log(0)
inv_logit_scaled((0.1))
inv_logit_scaled((0.7))
inv_logit((0.7))
logit_scaled(0.1)
inv.logit(0.1)
boot::inv.logit(0.1)
boot::inv.logit(0.7)
---
title: "Supplementary Materials: Search strategies improve with practice, but not with time pressure or financial incentives"
author: "ADF Clarke"
date: "30/06/2020"
output:
bookdown::pdf_book:
theme: journal
toc: true
---
```{r setup, include=FALSE}
# set the seed, so running this file will give exactly the same numbers as in our paper (hopefully)!
set.seed(2020)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.height = 4, fig.align = 'center')
library(brms)
library(tidyverse)
library(tidybayes)
library(patchwork)
library(lmerTest)
rstan::rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
# import data
# source("import_and_tidy_data.R")
dat_rt_acc <- read_csv("dat_acc_rt.csv")
dat_fix <- read_csv("dat_fix.csv") %>% filter(n > 1)
dat_fix
summary(dat$fix )
summary(dat_fix )
dat_fix <- read_csv("dat_fix.csv")
summary(dat_fix )
readRDS("data/processedFixData.Rda")
readRDS("../data/processedFixData.Rda")
as.tibble(readRDS("../data/processedFixData.Rda"))
summary(as.tibble(readRDS("../data/processedFixData.Rda")))
setwd("~/github/Deadline-Experiment/bayesian_analysis")
source('~/github/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
# Read in Acc and RT data
# setwd("C:/Users/Marcin/Documents/GitHub/Deadline-Experiment")
deadline_dat <- as_tibble(readRDS("../data/processedRTandAccData.Rda"))
reward_dat <- as_tibble(readRDS("../data/processedRTandAccData.Rda"))
source('~/github/Deadline-Experiment/bayesian_analysis/import_and_tidy_data.R', echo=TRUE)
reward_dat
reward_dat = (reward_dat[!(reward_dat$subj%in% subjectsToRemove),])
# Read in Acc and RT data
# setwd("C:/Users/Marcin/Documents/GitHub/Deadline-Experiment")
deadline_dat <- as_tibble(readRDS("../data/processedRTandAccData.Rda"))
reward_dat <- as_tibble(readRDS("../data/processedRTandAccData.Rda"))
subjectsToRemove = c(22,19,12)#22 and 19 accuracy on homogenous trials below 50%, 12 RT on homogenous trials over 8s
reward_dat = (reward_dat[!(reward_dat$subj%in% subjectsToRemove),])
reward_dat$subj = as.factor(reward_dat$subj)
rm(subjectsToRemove)
# Tidy up a little
deadline_dat %>%
select(
observer = "subj",
condition = "version",
targ_side = "targSide",
block = "completed",
t = "trial",
rt = "RT",
acc) %>%
mutate(
block = as.factor(block),
observer = paste("d", observer, sep = "")) -> deadline_dat
reward_dat %>%
select(
observer = "subj",
condition = "incentive",
targ_side = "targSide",
block,
t = "trial",
rt = "RT",
acc) %>%
mutate(
observer = paste("r", observer, sep = "")) -> reward_dat
