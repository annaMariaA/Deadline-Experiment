source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
filter(dat, trial == 5)
filter(dat, trial == 2)
filter(dat, trial == 3)
source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
dat
summary(dat)
# Import data from Clarke et al (2020)
dat <- readRDS("clarke2020_qjep_data/processedFixationData.Rda") %>% glimpse()
summary(dat)
source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
summary(dat)
source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
summary(dat)
source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
summary(dat)
library(tidyverse)
# Import data from Clarke et al (2020)
fix_dat <- readRDS("clarke2020_qjep_data/processedFixationData.Rda")
trl_dat <- readRDS("clarke2020_qjep_data/processedRTandAccData.Rda")
# only take correct trials
fix_dat <- filter(left_join(fix_dat, trl_dat), accuracy == 1)
trl_dat <- filter(trl_dat, accuracy == 1)
# remove people with poor target easy/absent accuracy
fix_dat <- filter(fix_dat, !(observer %in% c(4, 21, 33, 56, 58)))
trl_dat <- filter(trl_dat, !(observer %in% c(4, 21, 33, 56, 58)))
# remove fixations falling outside of simulus
fix_dat <- filter(fix_dat, is.finite(x), is.finite(y))
# classify every fixation as homo (left), central, or hetro (right)
centralWidth <- 0.1 # used to be 64 pixels! #change to 1 visual degree
fix_dat$side <- 'central'
fix_dat$side[which(fix_dat$x <(0-centralWidth/2))] <- "homo"
fix_dat$side[which(fix_dat$x >(0+centralWidth/2))] <- "hetero"
library(tidyverse)
# Import data from Clarke et al (2020)
fix_dat <- readRDS("clarke2020_qjep_data/processedFixationData.Rda")
trl_dat <- readRDS("clarke2020_qjep_data/processedRTandAccData.Rda")
# only take correct trials
fix_dat <- filter(left_join(fix_dat, trl_dat), accuracy == 1)
trl_dat <- filter(trl_dat, accuracy == 1)
# remove people with poor target easy/absent accuracy
fix_dat <- filter(fix_dat, !(observer %in% c(4, 21, 33, 56, 58)))
trl_dat <- filter(trl_dat, !(observer %in% c(4, 21, 33, 56, 58)))
# remove fixations falling outside of simulus
fix_dat <- filter(fix_dat, is.finite(x), is.finite(y))
# classify every fixation as homo (left), central, or hetro (right)
centralWidth <- 0.1 # used to be 64 pixels! #change to 1 visual degree
fix_dat$side <- 'central'
fix_dat$side[which(fix_dat$x <(0-centralWidth/2))] <- "homo"
fix_dat$side[which(fix_dat$x >(0+centralWidth/2))] <- "hetero"
fix_dat$side <- as_factor(fix_dat$side)
fix_dat
source('~/Documents/ongoing projects/Deadline-Experiment/power_analysis/power_analysis.R', echo=TRUE)
plot(filter(dat, session == "a")$prop_hetero, filter(dat, session == "b")$prop_hetero)
dat %>% group_by(obserer, session) %>% summarise(mf = mean(prop_hetero)) %>%
pivot_wider(names_from = session, values_from = prop_hetero)
dat %>% group_by(obsever, session) %>% summarise(mf = mean(prop_hetero)) %>%
pivot_wider(names_from = session, values_from = prop_hetero)
dat %>% group_by(observer, session) %>% summarise(mf = mean(prop_hetero)) %>%
pivot_wider(names_from = session, values_from = prop_hetero)
dat %>% group_by(observer, session) %>% summarise(mf = mean(prop_hetero)) %>%
pivot_wider(names_from = session, values_from = mf)
dat %>% group_by(observer, session) %>% summarise(mf = mean(prop_hetero)) %>%
pivot_wider(names_from = session, values_from = mf) %>%
ggplot(aes(x = a, y = b)) + geom_point()
library(betareg)
dat
lm(data = dat, prop_hetero ~ session + (1|observer))
library(lme4)
lmer(data = dat, prop_hetero ~ session + (1|observer))
summary(lmer(data = dat, prop_hetero ~ session + (1|observer)))
summary(lmer(data = dat, prop_hetero ~ session + (1|observer) + (1|trial)))
summary(lmer(data = dat, prop_hetero ~ session + (session|observer) + (session|trial)))
